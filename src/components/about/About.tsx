// components/about/About.tsx
// üë®‚Äçüé® Se√ß√£o sobre o artista Brian Dantas - VERS√ÉO FINAL PERFEITA

import React from "react";
import { useI18n } from "../../i18n/I18nContext";

/**
 * Fun√ß√£o helper para renderizar texto com formata√ß√£o espec√≠fica em qualquer idioma
 */
const renderFormattedText = (text: string, artistName: string) => {
  // Substitui o nome do artista por vers√£o em negrito
  let formattedText = text.replace(
    new RegExp(artistName, 'gi'),
    `<strong>${artistName}</strong>`
  );
  
  // Aplica formata√ß√µes espec√≠ficas baseadas em palavras-chave para TODOS os idiomas
  const formatRules = [
    // Engenheiro/Engineer/Ingeniero/Ing√©nieur
    { pattern: /Engenheiro de forma√ß√£o/gi, replacement: '<strong>Engenheiro de forma√ß√£o</strong>' },
    { pattern: /engineer by training/gi, replacement: '<strong>engineer by training</strong>' },
    { pattern: /Ingeniero de formaci√≥n/gi, replacement: '<strong>Ingeniero de formaci√≥n</strong>' },
    { pattern: /Ing√©nieur de formation/gi, replacement: '<strong>Ing√©nieur de formation</strong>' },
    
    // Realismo e Fine Line
    { pattern: /Realismo e Fine Line/gi, replacement: '<strong>Realismo e Fine Line</strong>' },
    { pattern: /Realism and Fine Line/gi, replacement: '<strong>Realism and Fine Line</strong>' },
    { pattern: /Realismo y Fine Line/gi, replacement: '<strong>Realismo y Fine Line</strong>' },
    { pattern: /R√©alisme et Fine Line/gi, replacement: '<strong>R√©alisme et Fine Line</strong>' },
    
    // Atendimento humanizado/Humanized service/etc
    { pattern: /atendimento humanizado/gi, replacement: '<strong>atendimento humanizado</strong>' },
    { pattern: /humanized service/gi, replacement: '<strong>humanized service</strong>' },
    { pattern: /atenci√≥n humanizada/gi, replacement: '<strong>atenci√≥n humanizada</strong>' },
    { pattern: /service humanis√©/gi, replacement: '<strong>service humanis√©</strong>' },
    
    // Biosseguran√ßa e higiene
    { pattern: /biosseguran√ßa e higiene/gi, replacement: '<strong>biosseguran√ßa e higiene</strong>' },
    { pattern: /biosafety and hygiene/gi, replacement: '<strong>biosafety and hygiene</strong>' },
    { pattern: /bioseguridad e higiene/gi, replacement: '<strong>bioseguridad e higiene</strong>' },
    { pattern: /bios√©curit√© et l'hygi√®ne/gi, replacement: '<strong>bios√©curit√© et l\'hygi√®ne</strong>' },
    { pattern: /bios√©curit√© et l\'hygi√®ne/gi, replacement: '<strong>bios√©curit√© et l\'hygi√®ne</strong>' },
  ];

  // Aplica todas as regras de formata√ß√£o
  formatRules.forEach(rule => {
    formattedText = formattedText.replace(rule.pattern, rule.replacement);
  });

  return formattedText;
};

/**
 * Fun√ß√£o para renderizar o √∫ltimo par√°grafo com it√°lico na frase final
 */
const renderLastParagraph = (text: string) => {
  const italicPatterns = [
    /Mais do que um trabalho, tatuar √© uma paix√£o vivida todos os dias\./gi,
    /More than work, tattooing is a passion lived every day\./gi,
    /M√°s que un trabajo, tatuar es una pasi√≥n vivida todos los d√≠as\./gi,
    /Plus qu'un travail, tatouer est une passion v√©cue tous les jours\./gi
  ];

  let formattedText = text;
  italicPatterns.forEach(pattern => {
    formattedText = formattedText.replace(pattern, (match) => `<em>${match}</em>`);
  });

  return formattedText;
};

/**
 * Se√ß√£o About - Informa√ß√µes sobre o artista
 * Layout responsivo com texto e foto
 * VERS√ÉO FINAL: Todos os par√°grafos traduzidos + formatados dinamicamente
 */
const About: React.FC = () => {
  const { t } = useI18n();

  return (
    <section id="about" className="about">
      <div className="about__container">
        <div className="about__content">
          <div className="about__text">
            <h2 className="about__title">{t.about.title}</h2>
            <div className="about__description">
              {/* Par√°grafo 1: Nome + Engenheiro de forma√ß√£o */}
              <p 
                dangerouslySetInnerHTML={{ 
                  __html: renderFormattedText(t.about.paragraph1, t.about.artistName)
                }} 
              />
              
              {/* Par√°grafo 2: Realismo e Fine Line */}
              <p 
                dangerouslySetInnerHTML={{ 
                  __html: renderFormattedText(t.about.paragraph2, t.about.artistName)
                }} 
              />
              
              {/* Par√°grafo 3: Atendimento humanizado + biosseguran√ßa */}
              <p 
                dangerouslySetInnerHTML={{ 
                  __html: renderFormattedText(t.about.paragraph3, t.about.artistName)
                }} 
              />
              
              {/* Par√°grafo 4: Frase final em it√°lico */}
              <p 
                dangerouslySetInnerHTML={{ 
                  __html: renderLastParagraph(renderFormattedText(t.about.paragraph4, t.about.artistName))
                }} 
              />
            </div>
          </div>

          <div className="about__image">
            <div className="about__image-wrapper">
              <img
                src="/img/brian-dantas.jpeg"
                alt={t.about.imageAlt}
                className="about__image-img"
              />
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default About;